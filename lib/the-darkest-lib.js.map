{"version":3,"sources":["webpack://TDLib/webpack/universalModuleDefinition","webpack://TDLib/webpack/bootstrap","webpack://TDLib/(webpack)/buildin/global.js","webpack://TDLib/./src/TDLib.js","webpack://TDLib/./src/boot.js","webpack://TDLib/./src/components/Component.js","webpack://TDLib/./src/components/index.js","webpack://TDLib/./src/rooms/Room.js","webpack://TDLib/./src/rooms/index.js","webpack://TDLib/./src/sprites/Sprite.js","webpack://TDLib/./src/sprites/behaviours/index.js","webpack://TDLib/./src/sprites/characters/Character.js","webpack://TDLib/./src/sprites/characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/NPCharacter.js","webpack://TDLib/./src/sprites/characters/npc-characters/index.js","webpack://TDLib/./src/sprites/characters/players/Player.js","webpack://TDLib/./src/sprites/characters/players/index.js","webpack://TDLib/./src/sprites/index.js","webpack://TDLib/./src/sprites/inventory-objects/index.js","webpack://TDLib/./src/sprites/world-objects/index.js","webpack://TDLib/./src/utils/index.js","webpack://TDLib/external \"phaser\""],"names":["TDLib","boot","require","Rooms","Sprites","Utils","module","exports","global","config","console","log","Component","gameObject","name","constructor","Components","Room","sceneKey","rawAssets","assets","raw","array","averageLightsContribute","cursors","layers","map","player","rooms","_scrapeAssets","forEach","obj","load","type","key","path","nPath","bPath","image","scrapeComplexObjKey","params","findFileNameFromPath","push","setName","lights","enable","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","setLayersDepth","cameras","main","setBounds","wallsLayer","width","height","startFollow","setRoundPixels","physics","world","TILE_SIZE","DEVICE","setPosition","ROOM_FRAME_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_MOBILE","setSize","SCREEN_PROPS","calculatedWidth","ROOM_HEIGHT_IN_TILE","ROOM_FRAME_IN_TILES_DESKTOP","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","backgroundLayer","createDynamicLayer","addTilesetImage","tiles","background","walls","wallsMaskLayer","objects","layer","element","eval","x","y","borderMasksLayer","create","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","actions","update","lightSources","calculateAverageLightsContribute","setAlpha","Scene","Sprite","room","texture","hasBody","behaviourType","INERT","pixelPerfect","observeText","DEFAULT_OBSERVE_TEXT","examineOrInteractText","DEFAULT_EXAMINE_OR_INTERACT_TEXT","blockExamineText","noLightObserveText","DEFAULT_NO_LIGHT_OBSERVE_TEXT","noLightExamineOrInteractText","DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT","examineOrInteractOffsetX","examineOrInteractThresholdRadius","minLightLevelToExamineOrInteract","DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT","minLightLevelToObserve","DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE","Math","floor","random","behaviour","add","existing","updates","setCollideWorldBounds","setGravityY","warn","value","offsetX","offsetY","input","hitArea","Physics","Arcade","Behaviours","Character","arguments","INTERACTIVE","alphaTolerance","facing","FACING","RIGHT","LEFT","Characters","NPCharacters","Players","NPCharacter","Player","isBlocked","on","pointer","pointerDown","InventoryObjects","WorldObjects"],"mappings":"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","file":"the-darkest-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TDLib\", [\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TDLib\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"TDLib\"] = factory(root[\"phaser\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_phaser__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/TDLib.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @namespace TDLib\n */\n\nconst TDLib = {\n  boot: require('./boot'),\n  Rooms: require('./rooms'),\n  Sprites: require('./sprites'),\n  Utils: require('./utils')\n};\n\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","export const boot = (config) => {\n  console.log(config);\n};\n","/**\n * The namespace of components.\n * @namespace TDLib.Components\n */\n\n/**\n * Class representing a generic TDLComponent. A TDLComponent extends the members and methods of a TDLSprite which uses it.\n * @memberof TDLib.Components\n */\nexport default class Component {\n  /**\n   * Creates a new TDLComponent.\n   * @param {TDLib.Sprites.TDLSprite} gameObject - The TDLSprite which owns the component.\n   */\n  constructor(gameObject) {\n\n    /**\n     * The name of the component.\n     * @type {string}\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The TDLSprite which owns the component.\n     * @type {TDLib.Sprites.TDLSprite}\n     */\n    this.gameObject = gameObject;\n  }\n}\n","const Components = {\n  Component: require('./Component')\n};\n\nmodule.exports = Components;\n","import Phaser from 'phaser';\nimport { Utils, Settings } from './';\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class Room extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      Utils.scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = Utils.findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    // this.scene.bringToTop(CursorManager.CURSOR_SCENE_KEY); // Add the cursor to the Room\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(\n      Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE,\n      this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE\n    );\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'MOBILE') {\n      this.cameras.main.setPosition(\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else {\n      this.cameras.main.setPosition(\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({\n      key: Utils.findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path),\n      tileWidth: Settings.TILE_SIZE,\n      tileHeight: Settings.TILE_SIZE\n    });\n\n    this.layers.backgroundLayer = this.map.createDynamicLayer(\n      'backgroundLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.background.path)),\n      0, 0\n    );// .setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createDynamicLayer(\n      'wallsLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.path)),\n      0, 0\n    );\n    this.layers.wallsMaskLayer = this.map.createDynamicLayer(\n      'wallsMaskLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)),\n      0, 0\n    );\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        this[element.name] = eval('new ' + element.type + '(this,' + (element.x + element.width / 2) + ', ' + (element.y - element.height / 2) + ');');\n        this[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'top-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'left-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      this.cameras.main.width - Settings.TILE_SIZE,\n      0,\n      'right-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0,\n      this.cameras.main.height - Settings.TILE_SIZE,\n      'bottom-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions.update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = this.lightSources.calculateAverageLightsContribute();\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","const Rooms = {\n  Room: require('./Room')\n};\n\nmodule.exports = Rooms;\n","import Phaser from 'phaser';\nimport Behaviour from './behaviours';\nimport BehaviourComponent from '../components';\n\n/**\n * The Darkest Lib.\n * @namespace TDLib\n * @since 1.0.0\n */\n\n/**\n * The actions namespace.\n * @namespace TDLib.Sprites\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLSprite.\n * @extends Phaser.Physics.Arcade.Sprite\n * @memberof TDLib.Sprites\n * @since 1.0.0\n */\nexport default class Sprite extends Phaser.Physics.Arcade.Sprite {\n  /**\n   * Create a TDLSprite.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   * @param {boolean} [precisePosition=false] - Specify if to examine or interact with the sprite it's required to be precisely at the examineOrInteractPoint. (Probably not needed)\n   */\n  constructor(\n    room,\n    x, y,\n    texture,\n    layer = null,\n    hasBody = true,\n    behaviourType = Behaviour.INERT,\n    pixelPerfect = null,\n    observeText = Behaviour.DEFAULT_OBSERVE_TEXT,\n    examineOrInteractText = Behaviour.DEFAULT_EXAMINE_OR_INTERACT_TEXT,\n    blockExamineText = null,\n    noLightObserveText = Behaviour.DEFAULT_NO_LIGHT_OBSERVE_TEXT,\n    noLightExamineOrInteractText = Behaviour.DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT,\n    examineOrInteractOffsetX = 0,\n    examineOrInteractThresholdRadius = 0,\n    minLightLevelToExamineOrInteract = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT,\n    minLightLevelToObserve = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE\n\n  ) {\n    super(room, x, y, texture);\n\n    /**\n     * The room where the sprite is created.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = room;\n\n    /**\n     * The name of the sprite, to map it in the room. Usually it's obtained by Tiled.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name;\n\n    /**\n     * The unique key of the sprite, composed by the sprite type and a 4 digits random integer number.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.key = this.constructor.name + (Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000);\n\n    /**\n     * The type of the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = this.constructor.name;\n\n    /**\n     * The sprite behaviour component instance.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.behaviour = new BehaviourComponent(this, behaviourType, pixelPerfect);\n\n    /**\n     * The text which appears when observing the sprite.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.observeText = observeText;\n\n    /**\n * The text which appears when examine or interact with the sprite.\n     * @type {string}\n     * @since 1.0.0\n */\n    this.examineOrInteractText = examineOrInteractText;\n\n    /**\n     * If not null it's the blocking text which appears the first time the sprite is examined.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.blockExamineText = blockExamineText;\n\n    /**\n     * The text which appears when observing the sprite when the diffused light is not sufficient.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.noLightObserveText = noLightObserveText;\n\n    /**\n * The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.noLightExamineOrInteractText = noLightExamineOrInteractText;\n\n    /**\n     * The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n     */\n    this.examineOrInteractOffsetX = examineOrInteractOffsetX;\n\n    /**\n     * The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.examineOrInteractThresholdRadius = examineOrInteractThresholdRadius;\n\n    /**\n     * The minimum value of diffused light to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.minLightLevelToExamineOrInteract = minLightLevelToExamineOrInteract;\n\n    /**\n * The minimum value of diffused light to observe the sprite.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.minLightLevelToObserve = minLightLevelToObserve;\n\n    this.room.add.existing(this);\n    this.room.updates.add(this);\n    if (hasBody) {\n      this.room.physics.add.existing(this);\n      this.setCollideWorldBounds(true);\n      this.setGravityY(10000);\n    }\n\n    if (layer != null) {\n      if (layer in this.room.layers) {\n        this.room.layers[layer].add(this);\n        this.room.layers.setLayersDepth();\n      } else console.warn('ALERT: layer not found for object', this);\n    }\n\n    this.create();\n  }\n\n  /**\n   * The create function is executed once, immediately after the initialization of the sprite.\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Created:', this.key, '- Type:', this.type, '- Behaviour:', this.behaviour.type);\n  }\n\n  /**\n   * The update is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Set the name property of a sprite.\n   * @param {string} value - The name which is used to map a sprite in the room.\n   * @return {TDLib.Sprites.TDLSprite}\n   * @since 1.0.0\n   */\n  setName(value) {\n    this.name = value;\n    return this;\n  }\n\n  // Poichè è stata aggiunta la pixel perfect collision, valutare l'utilità di questa funzione!\n  setHitAreaSize(width = this.width, height = this.height, offsetX = 0, offsetY = 0) {\n    this.input.hitArea.setSize(width, height);\n    this.input.hitArea.setPosition(((this.width - width) / 2) + offsetX, ((this.height - height) / 2) + offsetY);\n  }\n}\n","const Behaviours = {\n\n};\n\nmodule.exports = Behaviours;\n","import Sprite from '../Sprite';\r\nimport Behaviour from '../behaviours';\r\nimport ActionComponent from '../../components';\r\n\r\n/**\r\n * The characters namespace.\r\n * @namespace TDLib.Sprites.Characters\r\n * @since 1.0.0\r\n */\r\n\r\n/**\r\n * Class representing a TDLCharacter.\r\n * @extends TDLib.Sprites.TDLSprite\r\n * @memberof TDLib.Sprites.Characters\r\n * @since 1.0.0\r\n */\r\nexport default class Character extends Sprite {\r\n  /**\r\n   * Create a new TDLCharacter.\r\n   * @param {Room} room - The room where the character is created.\r\n   * @param {number} x - The x coordinate of the character.\r\n   * @param {number} y - The y coordinate of the character.\r\n   * @param {string} texture - The character's graphic.\r\n   * @param {string} layer - The character's layer.\r\n   */\r\n  constructor(room, x, y, texture, layer) {\r\n    super(...arguments, true, Behaviour.INTERACTIVE, { alphaTolerance: 1 });\r\n\r\n    /**\r\n     * The ActionComponent for this character.\r\n     * @type {Components.ActionComponent}\r\n     * @since 1.0.0\r\n     */\r\n    this.actions = new ActionComponent(this);\r\n\r\n    /**\r\n     * The facing of the character.\r\n     * @type {TDLCharacter.FACING}\r\n     * @since 1.0.0\r\n     */\r\n    this.facing = Character.FACING().RIGHT;\r\n  }\r\n\r\n  /**\r\n   * The possible facing options of the character.\r\n   * @since 1.0.0\r\n   */\r\n  static FACING() {\r\n    return {\r\n      RIGHT: 'facing_right',\r\n      LEFT: 'facing_left'\r\n    };\r\n  }\r\n\r\n  create() {\r\n    super.create();\r\n    // this.setPipeline('Light2D');\r\n  }\r\n}\r\n","const Characters = {\n  NPCharacters: require('./npc-characters'),\n  Players: require('./players'),\n  Character: require('./Character')\n};\n\nmodule.exports = Characters;\n","import Character from '../Character';\n\nexport default class NPCharacter extends Character {\n  constructor(room, x, y, texture, layer) {\n    super(room, x, y, texture, layer);\n  }\n}\n","const NPCharacters = {\n  NPCharacter: require('./NPCharacter')\n};\n\nmodule.exports = NPCharacters;\n","import Character from '../Character';\n\nexport default class Player extends Character {\n  constructor(room, x, y, texture) {\n    super(room, x, y, texture, 'playerLayer');\n\n    this.isBlocked = false;\n  }\n\n  create() {\n    super.create();\n\n    this.room.input.on('pointerdown', function (pointer) {\n      this.room.cursors.pointerDown(this);\n    }, this);\n  }\n}\n","const Players = {\n  Player: require('./Player')\n};\n\nmodule.exports = Players;\n","const Sprites = {\n  Behaviours: require('./behaviours'),\n  Characters: require('./characters'),\n  InventoryObjects: require('./inventory-objects'),\n  WorldObjects: require('./world-objects'),\n  Sprite: require('./Sprite')\n};\n\nmodule.exports = Sprites;\n","const InventoryObjects = {\n\n};\n\nmodule.exports = InventoryObjects;\n","const WorldObjects = {\n\n};\n\nmodule.exports = WorldObjects;\n","const Utils = {\n\n};\n\nmodule.exports = Utils;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_phaser__;"],"sourceRoot":""}