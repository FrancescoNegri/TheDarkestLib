{"version":3,"sources":["webpack://TDLib/webpack/universalModuleDefinition","webpack://TDLib/webpack/bootstrap","webpack://TDLib/./src/sprites/behaviours/index.js","webpack://TDLib/./src/sprites/characters/Character.js","webpack://TDLib/./src/rooms/index.js","webpack://TDLib/external \"phaser\"","webpack://TDLib/./src/sprites/Sprite.js","webpack://TDLib/./src/components/index.js","webpack://TDLib/./src/TDLib.js","webpack://TDLib/(webpack)/buildin/global.js","webpack://TDLib/./src/boot.js","webpack://TDLib/./src/rooms/Room.js","webpack://TDLib/./src/sprites/index.js","webpack://TDLib/./src/sprites/characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/NPCharacter.js","webpack://TDLib/./src/components/Component.js","webpack://TDLib/./src/sprites/characters/players/index.js","webpack://TDLib/./src/sprites/characters/players/Player.js","webpack://TDLib/./src/sprites/inventory-objects/index.js","webpack://TDLib/./src/sprites/world-objects/index.js","webpack://TDLib/./src/utils/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_Sprite2","_interopRequireDefault","_behaviours","_components","Character","room","x","y","texture","layer","_ref","_this","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","Array","slice","arguments","default","INTERACTIVE","alphaTolerance","actions","facing","FACING","RIGHT","_get","LEFT","Rooms","Room","_phaser","Sprite","length","undefined","hasBody","behaviourType","INERT","pixelPerfect","observeText","DEFAULT_OBSERVE_TEXT","examineOrInteractText","DEFAULT_EXAMINE_OR_INTERACT_TEXT","blockExamineText","noLightObserveText","DEFAULT_NO_LIGHT_OBSERVE_TEXT","noLightExamineOrInteractText","DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT","examineOrInteractOffsetX","examineOrInteractThresholdRadius","minLightLevelToExamineOrInteract","DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT","minLightLevelToObserve","DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE","constructor","Math","floor","random","type","behaviour","add","existing","updates","physics","setCollideWorldBounds","setGravityY","layers","setLayersDepth","console","warn","Physics","Arcade","log","width","height","offsetX","offsetY","input","hitArea","setSize","setPosition","Components","Component","global","TDLib","boot","Sprites","Utils","g","Function","eval","e","config","_","sceneKey","rawAssets","assets","raw","array","averageLightsContribute","cursors","map","player","rooms","_this2","_scrapeAssets","forEach","obj","load","path","nPath","bPath","image","_this3","scrapeComplexObjKey","params","findFileNameFromPath","push","setName","lights","enable","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","cameras","main","setBounds","wallsLayer","startFollow","setRoundPixels","world","Settings","TILE_SIZE","DEVICE","ROOM_FRAME_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_MOBILE","SCREEN_PROPS","calculatedWidth","ROOM_HEIGHT_IN_TILE","ROOM_FRAME_IN_TILES_DESKTOP","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","backgroundLayer","createDynamicLayer","addTilesetImage","tiles","background","walls","wallsMaskLayer","_this4","objects","element","borderMasksLayer","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","update","lightSources","calculateAverageLightsContribute","setAlpha","Scene","Behaviours","Characters","InventoryObjects","WorldObjects","NPCharacters","Players","NPCharacter","_Character2","gameObject","Player","isBlocked","on","pointer","pointerDown"],"mappings":"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","file":"the-darkest-lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TDLib\", [\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TDLib\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"TDLib\"] = factory(root[\"phaser\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const Behaviours = {\n\n};\n\nmodule.exports = Behaviours;\n","import Sprite from '../Sprite';\r\nimport Behaviour from '../behaviours';\r\nimport ActionComponent from '../../components';\r\n\r\n/**\r\n * The characters namespace.\r\n * @namespace TDLib.Sprites.Characters\r\n * @since 1.0.0\r\n */\r\n\r\n/**\r\n * Class representing a TDLCharacter.\r\n * @extends TDLib.Sprites.TDLSprite\r\n * @memberof TDLib.Sprites.Characters\r\n * @since 1.0.0\r\n */\r\nexport default class Character extends Sprite {\r\n  /**\r\n   * Create a new TDLCharacter.\r\n   * @param {Room} room - The room where the character is created.\r\n   * @param {number} x - The x coordinate of the character.\r\n   * @param {number} y - The y coordinate of the character.\r\n   * @param {string} texture - The character's graphic.\r\n   * @param {string} layer - The character's layer.\r\n   */\r\n  constructor(room, x, y, texture, layer) {\r\n    super(...arguments, true, Behaviour.INTERACTIVE, { alphaTolerance: 1 });\r\n\r\n    /**\r\n     * The ActionComponent for this character.\r\n     * @type {Components.ActionComponent}\r\n     * @since 1.0.0\r\n     */\r\n    this.actions = new ActionComponent(this);\r\n\r\n    /**\r\n     * The facing of the character.\r\n     * @type {TDLCharacter.FACING}\r\n     * @since 1.0.0\r\n     */\r\n    this.facing = Character.FACING().RIGHT;\r\n  }\r\n\r\n  /**\r\n   * The possible facing options of the character.\r\n   * @since 1.0.0\r\n   */\r\n  static FACING() {\r\n    return {\r\n      RIGHT: 'facing_right',\r\n      LEFT: 'facing_left'\r\n    };\r\n  }\r\n\r\n  create() {\r\n    super.create();\r\n    // this.setPipeline('Light2D');\r\n  }\r\n}\r\n","const Rooms = {\n  Room: require('./Room')\n};\n\nmodule.exports = Rooms;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import Phaser from 'phaser';\nimport Behaviour from './behaviours';\nimport BehaviourComponent from '../components';\n\n/**\n * The Darkest Lib.\n * @namespace TDLib\n * @since 1.0.0\n */\n\n/**\n * The actions namespace.\n * @namespace TDLib.Sprites\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLSprite.\n * @extends Phaser.Physics.Arcade.Sprite\n * @memberof TDLib.Sprites\n * @since 1.0.0\n */\nexport default class Sprite extends Phaser.Physics.Arcade.Sprite {\n  /**\n   * Create a TDLSprite.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   * @param {boolean} [precisePosition=false] - Specify if to examine or interact with the sprite it's required to be precisely at the examineOrInteractPoint. (Probably not needed)\n   */\n  constructor(\n    room,\n    x, y,\n    texture,\n    layer = null,\n    hasBody = true,\n    behaviourType = Behaviour.INERT,\n    pixelPerfect = null,\n    observeText = Behaviour.DEFAULT_OBSERVE_TEXT,\n    examineOrInteractText = Behaviour.DEFAULT_EXAMINE_OR_INTERACT_TEXT,\n    blockExamineText = null,\n    noLightObserveText = Behaviour.DEFAULT_NO_LIGHT_OBSERVE_TEXT,\n    noLightExamineOrInteractText = Behaviour.DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT,\n    examineOrInteractOffsetX = 0,\n    examineOrInteractThresholdRadius = 0,\n    minLightLevelToExamineOrInteract = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT,\n    minLightLevelToObserve = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE\n\n  ) {\n    super(room, x, y, texture);\n\n    /**\n     * The room where the sprite is created.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = room;\n\n    /**\n     * The name of the sprite, to map it in the room. Usually it's obtained by Tiled.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name;\n\n    /**\n     * The unique key of the sprite, composed by the sprite type and a 4 digits random integer number.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.key = this.constructor.name + (Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000);\n\n    /**\n     * The type of the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = this.constructor.name;\n\n    /**\n     * The sprite behaviour component instance.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.behaviour = new BehaviourComponent(this, behaviourType, pixelPerfect);\n\n    /**\n     * The text which appears when observing the sprite.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.observeText = observeText;\n\n    /**\n * The text which appears when examine or interact with the sprite.\n     * @type {string}\n     * @since 1.0.0\n */\n    this.examineOrInteractText = examineOrInteractText;\n\n    /**\n     * If not null it's the blocking text which appears the first time the sprite is examined.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.blockExamineText = blockExamineText;\n\n    /**\n     * The text which appears when observing the sprite when the diffused light is not sufficient.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.noLightObserveText = noLightObserveText;\n\n    /**\n * The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.noLightExamineOrInteractText = noLightExamineOrInteractText;\n\n    /**\n     * The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n     */\n    this.examineOrInteractOffsetX = examineOrInteractOffsetX;\n\n    /**\n     * The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.examineOrInteractThresholdRadius = examineOrInteractThresholdRadius;\n\n    /**\n     * The minimum value of diffused light to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.minLightLevelToExamineOrInteract = minLightLevelToExamineOrInteract;\n\n    /**\n * The minimum value of diffused light to observe the sprite.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.minLightLevelToObserve = minLightLevelToObserve;\n\n    this.room.add.existing(this);\n    this.room.updates.add(this);\n    if (hasBody) {\n      this.room.physics.add.existing(this);\n      this.setCollideWorldBounds(true);\n      this.setGravityY(10000);\n    }\n\n    if (layer != null) {\n      if (layer in this.room.layers) {\n        this.room.layers[layer].add(this);\n        this.room.layers.setLayersDepth();\n      } else console.warn('ALERT: layer not found for object', this);\n    }\n\n    this.create();\n  }\n\n  /**\n   * The create function is executed once, immediately after the initialization of the sprite.\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Created:', this.key, '- Type:', this.type, '- Behaviour:', this.behaviour.type);\n  }\n\n  /**\n   * The update is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Set the name property of a sprite.\n   * @param {string} value - The name which is used to map a sprite in the room.\n   * @return {TDLib.Sprites.TDLSprite}\n   * @since 1.0.0\n   */\n  setName(value) {\n    this.name = value;\n    return this;\n  }\n\n  // Poichè è stata aggiunta la pixel perfect collision, valutare l'utilità di questa funzione!\n  setHitAreaSize(width = this.width, height = this.height, offsetX = 0, offsetY = 0) {\n    this.input.hitArea.setSize(width, height);\n    this.input.hitArea.setPosition(((this.width - width) / 2) + offsetX, ((this.height - height) / 2) + offsetY);\n  }\n}\n","const Components = {\n  Component: require('./Component')\n};\n\nmodule.exports = Components;\n","/**\n * @namespace TDLib\n */\n\nconst TDLib = {\n  boot: require('./boot'),\n  Rooms: require('./rooms'),\n  Sprites: require('./sprites'),\n  Utils: require('./utils')\n};\n\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export const boot = (config) => {\n  console.log(config);\n};\n","import Phaser from 'phaser';\nimport { Utils, Settings } from './';\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class Room extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      Utils.scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = Utils.findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    // this.scene.bringToTop(CursorManager.CURSOR_SCENE_KEY); // Add the cursor to the Room\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(\n      Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE,\n      this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE\n    );\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'MOBILE') {\n      this.cameras.main.setPosition(\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else {\n      this.cameras.main.setPosition(\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({\n      key: Utils.findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path),\n      tileWidth: Settings.TILE_SIZE,\n      tileHeight: Settings.TILE_SIZE\n    });\n\n    this.layers.backgroundLayer = this.map.createDynamicLayer(\n      'backgroundLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.background.path)),\n      0, 0\n    );// .setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createDynamicLayer(\n      'wallsLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.path)),\n      0, 0\n    );\n    this.layers.wallsMaskLayer = this.map.createDynamicLayer(\n      'wallsMaskLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)),\n      0, 0\n    );\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        this[element.name] = eval('new ' + element.type + '(this,' + (element.x + element.width / 2) + ', ' + (element.y - element.height / 2) + ');');\n        this[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'top-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'left-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      this.cameras.main.width - Settings.TILE_SIZE,\n      0,\n      'right-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0,\n      this.cameras.main.height - Settings.TILE_SIZE,\n      'bottom-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions.update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = this.lightSources.calculateAverageLightsContribute();\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","const Sprites = {\n  Behaviours: require('./behaviours'),\n  Characters: require('./characters'),\n  InventoryObjects: require('./inventory-objects'),\n  WorldObjects: require('./world-objects'),\n  Sprite: require('./Sprite')\n};\n\nmodule.exports = Sprites;\n","const Characters = {\n  NPCharacters: require('./npc-characters'),\n  Players: require('./players'),\n  Character: require('./Character')\n};\n\nmodule.exports = Characters;\n","const NPCharacters = {\n  NPCharacter: require('./NPCharacter')\n};\n\nmodule.exports = NPCharacters;\n","import Character from '../Character';\n\nexport default class NPCharacter extends Character {\n  constructor(room, x, y, texture, layer) {\n    super(room, x, y, texture, layer);\n  }\n}\n","/**\n * The namespace of components.\n * @namespace TDLib.Components\n */\n\n/**\n * Class representing a generic TDLComponent. A TDLComponent extends the members and methods of a TDLSprite which uses it.\n * @memberof TDLib.Components\n */\nexport default class Component {\n  /**\n   * Creates a new TDLComponent.\n   * @param {TDLib.Sprites.TDLSprite} gameObject - The TDLSprite which owns the component.\n   */\n  constructor(gameObject) {\n\n    /**\n     * The name of the component.\n     * @type {string}\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The TDLSprite which owns the component.\n     * @type {TDLib.Sprites.TDLSprite}\n     */\n    this.gameObject = gameObject;\n  }\n}\n","const Players = {\n  Player: require('./Player')\n};\n\nmodule.exports = Players;\n","import Character from '../Character';\n\nexport default class Player extends Character {\n  constructor(room, x, y, texture) {\n    super(room, x, y, texture, 'playerLayer');\n\n    this.isBlocked = false;\n  }\n\n  create() {\n    super.create();\n\n    this.room.input.on('pointerdown', function (pointer) {\n      this.room.cursors.pointerDown(this);\n    }, this);\n  }\n}\n","const InventoryObjects = {\n\n};\n\nmodule.exports = InventoryObjects;\n","const WorldObjects = {\n\n};\n\nmodule.exports = WorldObjects;\n","const Utils = {\n\n};\n\nmodule.exports = Utils;\n"],"sourceRoot":""}