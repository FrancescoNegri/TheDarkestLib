{"version":3,"sources":["webpack://the-darkest-lib/webpack/universalModuleDefinition","webpack://the-darkest-lib/webpack/bootstrap","webpack://the-darkest-lib/./src/TDLib.js","webpack://the-darkest-lib/(webpack)/buildin/global.js","webpack://the-darkest-lib/./src/rooms/index.js","webpack://the-darkest-lib/./src/rooms/Room.js","webpack://the-darkest-lib/./src/rooms sync","webpack://the-darkest-lib/./src/settings.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","TDLib","Rooms","require","boot","g","this","Function","eval","e","Room","Phaser","ensure","Settings","scrapeComplexObjKey","obj","params","searchKey","callback","Array","isArray","length","_typeof","prop","findFileNameFromPath","path","nameFirstCharachterPosition","lastIndexOf","nameLastCharachterPosition","slice","TDLRoom","sceneKey","rawAssets","_this","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","assets","raw","array","averageLightsContribute","cursors","layers","map","constructor","player","rooms","_this2","_scrapeAssets","forEach","load","type","nPath","bPath","image","_this3","push","setName","lights","enable","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","setLayersDepth","cameras","main","setBounds","wallsLayer","width","height","startFollow","setRoundPixels","physics","world","TILE_SIZE","DEVICE","setPosition","ROOM_FRAME_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_MOBILE","setSize","SCREEN_PROPS","calculatedWidth","ROOM_HEIGHT_IN_TILE","ROOM_FRAME_IN_TILES_DESKTOP","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","backgroundLayer","createDynamicLayer","addTilesetImage","tiles","background","walls","wallsMaskLayer","_this4","objects","layer","element","x","y","borderMasksLayer","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","actions","update","lightSources","calculateAverageLightsContribute","setAlpha","Scene","webpackEmptyContext","req","Error","code","keys","resolve","id","INVENTORY_WIDTH_IN_TILES_DESKTOP","INVENTORY_HEIGHT_IN_TILES_DESKTOP"],"mappings":"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","file":"the-darkest-lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"the-darkest-lib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"the-darkest-lib\"] = factory();\n\telse\n\t\troot[\"the-darkest-lib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const TDLib = {\n  Rooms: require('./rooms'),\n  boot: () => {\n    // Funzione che inizializza la libreria\n  }\n};\n\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export const Rooms = {\n  Room: require('./Room')\n};\n","const Phaser = require.ensure('phaser');\nconst Settings = require('../settings');\n\nfunction scrapeComplexObjKey(obj, params, searchKey, callback) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      scrapeComplexObjKey(obj[i], params, searchKey, callback);\n    }\n  } else if (obj !== null && typeof obj === 'object') {\n    if (searchKey in obj) {\n      callback(obj, params);\n    } else {\n      for (let prop in obj) {\n        scrapeComplexObjKey(obj[prop], params, searchKey, callback);\n      }\n    }\n  }\n}\n\nfunction findFileNameFromPath(path) {\n  let nameFirstCharachterPosition = path.lastIndexOf('/') + 1;\n  let nameLastCharachterPosition = path.lastIndexOf('.');\n\n  if (nameFirstCharachterPosition === -1) nameFirstCharachterPosition = 0;\n  if (nameLastCharachterPosition === -1) return -1;\n  let filename = path.slice(nameFirstCharachterPosition, nameLastCharachterPosition);\n\n  return filename;\n}\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class TDLRoom extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the TDLCharacter designated as player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    // this.scene.bringToTop(CursorManager.CURSOR_SCENE_KEY); // Add the cursor to the Room\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE, this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE);\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'MOBILE') {\n      this.cameras.main.setPosition((Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE, (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE);\n      this.cameras.main.setSize(Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE, Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE);\n    } else {\n      this.cameras.main.setPosition(Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE, Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE);\n      this.cameras.main.setSize(Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE, Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE);\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({ key: findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path), tileWidth: Settings.TILE_SIZE, tileHeight: Settings.TILE_SIZE });\n\n    this.layers.backgroundLayer = this.map.createDynamicLayer('backgroundLayer', this.map.addTilesetImage(findFileNameFromPath(this.assets.raw.image.tiles.background.path)), 0, 0);// .setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createDynamicLayer('wallsLayer', this.map.addTilesetImage(findFileNameFromPath(this.assets.raw.image.tiles.walls.path)), 0, 0);\n    this.layers.wallsMaskLayer = this.map.createDynamicLayer('wallsMaskLayer', this.map.addTilesetImage(findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)), 0, 0);\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        this[element.name] = eval('new ' + element.type + '(this,' + (element.x + element.width / 2) + ', ' + (element.y - element.height / 2) + ');');\n        this[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(0, 0, 'top-border-mask-camera').setScrollFactor(0).setOrigin(0, 0);\n    this.layers.borderMasksLayer.create(0, 0, 'left-border-mask-camera').setScrollFactor(0).setOrigin(0, 0);\n    this.layers.borderMasksLayer.create(this.cameras.main.width - Settings.TILE_SIZE, 0, 'right-border-mask-camera').setScrollFactor(0).setOrigin(0, 0);\n    this.layers.borderMasksLayer.create(0, this.cameras.main.height - Settings.TILE_SIZE, 'bottom-border-mask-camera').setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions.update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = this.lightSources.calculateAverageLightsContribute();\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 4;","var Settings = {\n  TILE_SIZE: 48,\n  ROOM_HEIGHT_IN_TILE: 6,\n  INVENTORY_WIDTH_IN_TILES_MOBILE: 1.25,\n  INVENTORY_WIDTH_IN_TILES_DESKTOP: 0,\n  INVENTORY_HEIGHT_IN_TILES_MOBILE: 0,\n  INVENTORY_HEIGHT_IN_TILES_DESKTOP: 1,\n  ROOM_FRAME_IN_TILES_DESKTOP: 0.5,\n  ROOM_FRAME_IN_TILES_MOBILE: 0.25,\n  SCREEN_PROPS: {},\n  DEVICE: ''\n};\n\nmodule.exports = Settings;\n"],"sourceRoot":""}